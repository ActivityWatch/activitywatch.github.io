// Global site tag (gtag.js) - Google Analytics
script(async src="https://www.googletagmanager.com/gtag/js?id=UA-121109725-1")

script
  | window.dataLayer = window.dataLayer || [];
  | function gtag(){dataLayer.push(arguments);}
  | gtag('js', new Date());
  |
  | gtag('config', 'UA-91551508-1');
  | gtag('config', 'G-SNPLMVFB8V');

script
  |// From: https://support.google.com/analytics/answer/7478520?hl=en
  |/**
  |* Function that registers a click on an outbound link in Analytics.
  |* This function takes a valid URL string as an argument, and uses that URL string
  |* as the event label. Setting the transport method to 'beacon' lets the hit be sent
  |* using 'navigator.sendBeacon' in browser that support it.
  |*/
  |var getOutboundLink = function(urlOrEvent) {
  |  let url;
  |  let target;
  |  if(typeof urlOrEvent === 'string') {
  |    url = urlOrEvent;
  |  } else {
  |    let event = urlOrEvent || window.event;
  |    let el = event.target || event.srcElement;
  |    while (url === undefined) {
  |      if(!el.href) {
  |        console.log(`href was undefined, checking parent`)
  |        el = el.parentNode;
  |      }
  |      url = el.href;
  |      target = el.target;
  |    }
  |  }
  |  //console.log(url);
  |  //console.log(target);
  |  if(window.google_tag_manager) {
  |    gtag('event', 'click', {
  |         'event_category': 'outbound',
  |         'event_label': url,
  |         'transport_type': 'beacon',
  |         'event_callback': function() {
  |           document.location = url;
  |         }
  |    });
  |  } else {
  |    document.location = url;
  |  }
  |}
  |
  |function registerOutbound() {
  |  // Register onclick handlers to use getOutboundLink for all outbound links
  |  Object.values(document.getElementsByTagName("a")).map(a => {
  |    if(!a.href.startsWith(window.origin)) {
  |      // For all external links
  |      console.log("Registered getOutboundLink for", a);
  |      a.setAttribute("onclick", "getOutboundLink(event); return false");
  |      a.setAttribute("target", "_blank");
  |    }
  |  });
  |}
  |
  |document.addEventListener("DOMContentLoaded", function(event) {
  |   registerOutbound()
  |});
